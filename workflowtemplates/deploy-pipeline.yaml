apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: deploy-pipeline
spec:
  entrypoint: deploy-pipeline
  serviceAccountName: argo-workflows-sa
  templates:
    - name: deploy-pipeline
      steps:
        - - name: clone-repo
            template: clone-repo
            arguments:
              parameters:
                - name: git-url
                  value: "https://github.com/NaveenBalagouni/deploy-pipeline.git"
                - name: git-branch
                  value: "main"
                - name: git-username
                  value: "NaveenBalagouni"
                - name: git-credentials
                  value: "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"  # Replace with your actual token or use a secret

        - - name: maven-build
            template: maven-build

          
        - - name: kaniko-build-push
            template: kaniko-build-push

        
        - - name: update-values-yaml
            template: update-values-yaml

       

    - name: clone-repo
      inputs:
        parameters:
          - name: git-url
          - name: git-branch
          - name: git-username
          - name: git-credentials
      container:
        image: "quay.io/opsmxpublic/opsmx-custom-binaries:kubectl-spin-cli-git-bash-jq-yq-argocd-v2"
        command: ["/bin/bash", "-c"]
        args:
          - |
            echo "Cloning repository and checking out branch..."
            echo "Git URL: ${git_url}"
            echo "Git Branch: ${git_branch}"
            echo "Git Username: ${git_username}"
            git config --global credential.helper store
            echo "https://${git_username}:${git_credentials}@${git_url}" > /mnt/git-repo/.git-credentials
            git clone -b ${git_branch} ${git_url} /mnt/git-repo
            cd /mnt/git-repo
            git checkout ${git_branch}
        env:
          - name: git_url
            value: "{{inputs.parameters.git-url}}"
          - name: git_branch
            value: "{{inputs.parameters.git-branch}}"
          - name: git_username
            value: "{{inputs.parameters.git-username}}"
          - name: git_credentials
            value: "{{inputs.parameters.git-credentials}}"
    - name: maven-build
      container:
        image: "maven"
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Building project with Maven..."
            echo "Cloning repository and checking out branch..."
            # Clone the repository
            git clone -b main https://github.com/NaveenBalagouni/deploy-pipeline.git /project
            echo "Cloning successful, changing directory..."
            # Change to the cloned repository directory
            cd /project
            echo "Current directory: $(pwd)"
            ls -l /project
            ls -l /project
            echo "POM file found. Running Maven build..."
            mvn clean install

    - name: kaniko-build-push
      container:
        image: "bitnami/kaniko"
        imagePullPolicy: Always
        command: ["/kaniko/executor"]  # Debug command
        # (if we set cache true we should make an ECR container update)
        # i gave the full path to the docker file but maybe relative is fine
        env:
          - name: DOCKER_REGISTRY
            value: "quay.io"
          - name: DOCKER_IMAGE
            value: "opsmxpublic/baseline-issuegen"
          - name: IMAGE_TAG
            value: "issue-base-gen-19"
          - name: QUAY_USERNAME
            valueFrom:
              secretKeyRef:
                name: quay-credentials
                key: "quay-username"  # Assuming this key is correct, and no invisible characters exist.
          - name: QUAY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: quay-credentials
                key: "quay-password"

        args:
          [
            "--context=git://github.com/NaveenBalagouni/kaniko-build.git",
            "--dockerfile=/kaniko/Dockerfile",
            "--destination=$(DOCKER_REGISTRY)/$(DOCKER_IMAGE):$(IMAGE_TAG)",  # Ensure proper expansion
            "--cache=false",
            "--verbosity=debug"   # Increase verbosity for more details
          ]

    - name: update-values-yaml
      container:
        image: "quay.io/opsmxpublic/opsmx-custom-binaries:kubectl-spin-cli-git-bash-jq-yq-argocd-v2"
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Cloning Git repository..."

            git clone https://github.com/NaveenBalagouni/kaniko-build.git /mnt/git-repo && break || sleep 10
            echo "Listing repository contents:"
            ls /mnt/git-repo

            # Checking if artifact file exists
            echo "Checking if artifact file exists..."
            if [ -f /mnt/git-repo/artifact ]; then
              echo "Artifact file found!"
              echo "v1.0.0" > /mnt/git-repo/artifact
              echo "Artifact file created."
            else
              echo "Artifact file not found!"
            fi

            image=$(cat /mnt/git-repo/artifact)
            echo "Image tag: $image"
       
            # Checking if values.yaml exists:
            echo "Checking if values.yaml exists:"
            if [ -f /mnt/git-repo/helm-app/values.yaml ]; then
              yq eval ".image = \"$image\"" -i /mnt/git-repo/helm-app/values.yaml
            else
              echo "values.yaml file not found!"
            fi

              echo "Pushing changes to GitHub..."

            # Ensure you're inside a git repository
            cd /mnt/git-repo


            # GitHub repository URL with authentication token
            GITHUB_TOKEN="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"
            REPO_URL="https://github.com/NaveenBalagouni/kaniko-build.git"
            BRANCH=main

            # Push to GitHub using the token for authentication
            git push https://$GITHUB_TOKEN@github.com/NaveenBalagouni/kaniko-build.git $BRANCH


        


